plugins {
    id 'com.android.library'
    id 'maven-publish'
}

ext {
    bintrayRepo = 'maven'
    bintrayName = POM_ARTIFACT_ID

    publishedGroupId = GROUP
    libraryName = POM_ARTIFACT_ID
    artifact = POM_ARTIFACT_ID

    libraryDescription = POM_DESCRIPTION

    siteUrl = POM_SCM_URL
    gitUrl = POM_SCM_CONNECTION

    libraryVersion = VERSION_NAME

    developerId = POM_DEVELOPER_ID
    developerName = POM_DEVELOPER_NAME
    developerEmail = 'opensource@hootsuite.com'

    licenseName = POM_LICENCE_NAME
    licenseUrl = POM_LICENCE_URL
    allLicenses = ["Apache-2.0"]
}

android {
    namespace 'com.hootsuite.nachos'
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    tasks.withType(JavaCompile).configureEach{
        options.fork = true
        options.forkOptions.jvmArgs +=[
                '--add-exports=jdk.compiler/com.sun.tools.javac.tree=ALL-UNNAMED',
                '--add-exports=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED',
                '--add-exports=jdk.compiler/com.sun.tools.javac.util=ALL-UNNAMED']
    }
    lintOptions {
        disable 'GradleDependency', 'ExpiringTargetSdkVersion'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.android.support:support-compat:$rootProject.ext.supportLibVersion"
    testImplementation 'org.robolectric:robolectric:4.0.2'
    testImplementation 'org.mockito:mockito-core:2.21.0'
    testImplementation('com.squareup.assertj:assertj-android:1.1.0') {
        exclude group: 'org.mockito', module: 'mockito-core'
    }
}

afterEvaluate {
    publishing {
        repositories {
            maven {
                name = "GitHubPackages"
                url = uri("https://maven.pkg.github.com/drdream-space/nachos")
                credentials {
                    username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                    password = project.findProperty("gpr.key") ?: System.getenv("PASSWORD")
                }
            }
        }
        publications {
            release(MavenPublication) {
                from components.findByName('release')
                groupId = "dream-space"
                artifactId = "dreamspace.nachos"
                version = "1.3"
            }
        }
    }
}
